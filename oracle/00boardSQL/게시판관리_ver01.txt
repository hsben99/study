GET c:\MTest\boardset.txt    sqlPlus 로 화일 불러오기
edit c:\MTest\boardset.txt   메모장으로 열기
@ c:\MTest\boardset.txt  => 자동실행 가능

** Board Table Create

sqlplus system/oracle

select * from tabs ;

create  table board (    
seq number(5) primary key ,
title varchar2(200),
id varchar2(10),
content varchar2(2000),
regdate  date default sysdate,
cnt number(5) default 0 ) ; 

set linesize 1200
set pagesize 1200

COLUMN seq Format 99 ;
COLUMN title Format a10 ;
COLUMN id Format a10 ;
COLUMN content Format a40 ;
COLUMN regdate Format a12 ;

select * from board ;

set linesize 1200
set pagesize 1200

COLUMN id Format a10 ;
COLUMN passward Format a10 ;
COLUMN name Format a20 ;
COLUMN lev Format a5 ;
select * from board ;


insert into board values
(1, 'Spring 이란?','javasam','처음엔 복잡하고 난해하지만 친해지면 매우 편리하다',sysdate,0); 

insert into board values
(2, '의존성 주입?','hongsam', 'dependency injection_객체간의 의존관계를 객체 자신이 아닌 외부의 조립기가  수행한다.',sysdate,0); 

insert into board values
(3, '느슨한 결합(loose coupling)', 'banana','객체는 인터페이스에 의한 의존관계만을 알고 있으며 이 의존관계는 구현 클래스에 대한 차이를 모르는채 서로 다른 구현으로 대체가 가능',sysdate,0); 

insert into board values
(4, 'Spring의 DI 지원','apple','Spring Container가 DI 조립기(Assembler)를 제공',sysdate,0); 

insert into board values
(5, 'Spring 설정파일','coffee','Spring Container가 어떻게 일할 지를 설정하는 파일',sysdate,0); 

----------------------------------------------------------------------------------------------------

insert into board values
(1, 'Spring 이란?','javasam','처음엔 복잡하고 난해하지만 친해지면 매우 편리하다',sysdate,0,1,0,0); 

insert into board values
(2, '의존성 주입?','hongsam', 'dependency injection_객체간의 의존관계를 객체 자신이 아닌 외부의 조립기가  수행한다.',sysdate,0,2,0,0); 

insert into board values
(3, '느슨한 결합(loose coupling)', 'banana','객체는 인터페이스에 의한 의존관계만을 알고 있으며 이 의존관계는 구현 클래스에 대한 차이를 모르는채 서로 다른 구현으로 대체가 가능',sysdate,0,3,0,0); 

insert into board values
(4, 'Spring의 DI 지원','apple','Spring Container가 DI 조립기(Assembler)를 제공',sysdate,0,4,0,0); 

insert into board values
(5, 'Spring 설정파일','coffee','Spring Container가 어떻게 일할 지를 설정하는 파일',sysdate,0,5,0,0); 

commit ;

----------------------------------------------------------------------------------------
**함수 연습
=> member 에서 모든 member 의 point , weight 의 합계 와 평균, 인원수 를 출력한다.
select sum(point) p합계, avg(point) p평균, sum(weight) w합계, avg(weight) w평균, count(*) 인원수 from member;
=> member 에서 point, weight 의 최대값 max, 최소값 min 을 출력한다.
select max(point),min(point),max(weight),min(weight) from member;

**글번호 자동증가
insert into board2 values
((select max(seq)+1 from board2), 'nvl test','apple','Spring Container가 DI 조립기(Assembler)를 제공',sysdate,0); 

=>seq 에 입력되는 값은 : max(seq) +1
select max(seq),(max(seq)+1) from board;

=>select max(seq)+1 from board;
create  table board2(    
seq number(5) primary key ,
title varchar2(200),
id varchar2(10),
content varchar2(2000),
regdate  date default sysdate,
cnt number(5) default 0 ) ; 


------------------------------------------------------------------------------------------


insert into board values
((select nvl(max(seq), 0)+1 from board), 'nvl test','banana','Spring Container가 ...파일',sysdate,0); 

** nvl 함수 (a,b) => a 없으면(NULL 이면) b 선택 

select * from board ;

----------------------------------------------------------------------------------------

** Users Table Create


create  table users (    
id varchar2(8) primary key ,
password varchar2(8),
name varchar2(20),
role varchar2(5)) ; 

insert into users values('javasam','12345','엄미현','A'); 
insert into users values('hongsam','12345','홍길동','A'); 
insert into users values('leesam','12345','이순신','A'); 
insert into users values('banana','12345','바나나','B'); 
insert into users values('coffee','12345','카푸치노','B'); 
insert into users values('apple','12345','스티브','B'); 

select * from users ;
-------------------------------------------------------------------
create  table member (    
id varchar2(10) primary key ,
password varchar2(10),
name varchar2(30),
lev varchar2(5),
pay number(10),
birthd date ,
weight number(5.2)) ; 

alter table member add  primary key (name) ;

insert into member values('javasam','12345','김유신','A',12345,sysdate,67.89); 
insert into users values('hongsam','12345','홍길동','A',12345,sysdate,67.89); 
insert into users values('leesam','12345','이순신','A',12345,sysdate,67.89); 
insert into users values('banana','12345','바나나','B',12345,sysdate,67.89); 
insert into users values('coffee','12345','카푸치노','B',12345,sysdate,67.89); 
insert into users values('apple','12345','스티브','B',12345,sysdate,67.89); 

select * from member ;

-----실습
      alter table member add pay number(10); 
      alter table member add weight number(5,2); => 123.12
      alter table member add birthd date default sysdate  ; 
	
      update  member  set pay = 6789  ;
      update  member  set pay = 3456  where lev='A' ;
     alter table member drop column birthd2 ;


*** 실습  :  SPOOL  적용 
1*  member table 의 자료 수정  (DML) : commit 필요
	member 에서 자료  insert  ,  update ,   delete  => 2개씩  

2* member table 의 구조 수정  (DDL) :   AutoCommit
	필드 추가 , 삭제 , 필드명 변경1개 씩 
  
3* member table 의 조회 (DQL)
	where 조건문 20개 연습 ( like ,  order by , and , or 4개씩 )  
 
4* table 생성 -> member2 ( 자료 3개만 입력 , 조회 )


